class Joystick{constructor(t,e={}){this.config={sizeBackground:e.sizeBackground||120,boundSize:e.boundSize||100,handleSize:e.handleSize||16,minAxis:e.minAxis??-100,maxAxis:e.maxAxis??100,step:e.step||1,stickOnXAxis:e.stickOnXAxis||!1,stickOnYAxis:e.stickOnYAxis||!1,returnToCenter:e.returnToCenter??!0,onChange:e.onChange||null},this.element=document.getElementById(t),this.addDefaultStyles(),this.init(),this.attachEvents()}addDefaultStyles(){if(!document.getElementById("joystick-styles")){const t=document.createElement("style");t.type="text/css",t.id="joystick-styles";const e="\n          .joystick-container {\n            position: relative;\n            display: inline-block;\n          }\n          .joystick-bg {\n            position: absolute;\n            border-radius: 50%;\n            background-color: #e0e0e0;\n            display: flex;\n            justify-content: center;\n            align-items: center;\n          }\n          .joystick-handle {\n            position: absolute;\n            border-radius: 50%;\n            background-color: #444;\n            cursor: pointer;\n          }\n        ";t.appendChild(document.createTextNode(e)),document.head.insertBefore(t,document.head.firstChild)}}init(){const{sizeBackground:t,boundSize:e,handleSize:i}=this.config,n=(t-e)/2;this.container=document.createElement("div"),this.container.className="joystick-container",this.container.style.width=`${t}px`,this.container.style.height=`${t}px`,this.bgCircle=document.createElement("div"),this.bgCircle.className="joystick-bg",this.bgCircle.style.width=`${e}px`,this.bgCircle.style.height=`${e}px`,this.bgCircle.style.left=`${n}px`,this.bgCircle.style.top=`${n}px`,this.handle=document.createElement("div"),this.handle.className="joystick-handle",this.handle.style.width=`${i}px`,this.handle.style.height=`${i}px`,this.resetHandlePosition(),this.container.appendChild(this.bgCircle),this.bgCircle.appendChild(this.handle),this.element.appendChild(this.container),this.centerX=this.bgCircle.offsetWidth/2,this.centerY=this.bgCircle.offsetHeight/2,this.currentX=0,this.currentY=0}attachEvents(){this.handle.addEventListener("mousedown",(t=>this.startDrag(t))),document.addEventListener("mouseup",(()=>this.stopDrag())),document.addEventListener("mousemove",(t=>this.onDrag(t))),this.handle.addEventListener("touchstart",(t=>this.startDrag(t)),{passive:!1}),document.addEventListener("touchend",(()=>this.stopDrag())),document.addEventListener("touchmove",(t=>this.onDrag(t)),{passive:!1})}startDrag(t){this.isDragging=!0,t.preventDefault()}stopDrag(){this.isDragging=!1,this.config.returnToCenter&&this.resetHandlePosition()}onDrag(t){if(!this.isDragging)return;const{boundSize:e,handleSize:i,stickOnXAxis:n,stickOnYAxis:s,minAxis:o,maxAxis:h,step:c,onChange:r}=this.config,a=this.container.getBoundingClientRect(),d=t.touches?t.touches[0].clientX:t.clientX,l=t.touches?t.touches[0].clientY:t.clientY,u=d-a.left-this.container.offsetWidth/2,g=l-a.top-this.container.offsetHeight/2;let p=n?0:u,m=s?0:g;const y=(e-i)/2;if(Math.sqrt(p*p+m*m)>y){const t=Math.atan2(m,p);p=y*Math.cos(t),m=y*Math.sin(t)}const x=Math.round(p/y*((h-o)/2)/c)*c,f=Math.round(m/y*((h-o)/2)/c)*c;this.currentX=x,this.currentY=f,this.handle.style.left=p+this.centerX-i/2+"px",this.handle.style.top=m+this.centerY-i/2+"px","function"==typeof r&&r(this.getCoor())}resetHandlePosition(){const{handleSize:t}=this.config;this.handle.style.left=this.centerX-t/2+"px",this.handle.style.top=this.centerY-t/2+"px",this.currentX=0,this.currentY=0}getCoor(){return{x:this.currentX,y:this.currentY}}}
